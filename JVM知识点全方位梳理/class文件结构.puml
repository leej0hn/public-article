@startmindmap
+ JVM
++ class文件结构
+++ 魔数
++++ 唯一作用是用于确定这个文件是否为一个能被虚拟机接受的Class文件。
+++ 版本号
+++ 常量池
++++ 字面量
++++ 符号引用
+++ 访问标志
++++ 用于识别一些类或接口层次的访问信息
*****:是否final
是否public,否则是private
是否是接口
是否可用invokespecial字节码指令
是否是abstract
是否是注解
是否是枚举;
+++ 类索引，父类索引，接口索引集合
++++ 这三项数据主要用于确定这个类的继承关系
+++++ 类索引
++++++ 用于确定这个类的全限定名
+++++ 父类索引
++++++ 用于确定这个类父类的全限定名
+++++ 接口索引
++++++ 描述这个类实现了哪些接口
+++ 字段表集合
++++ 表结构
+++++ 访问标志
+++++ 名称索引
+++++ 描述符索引
+++++ 属性表集合
++++ 字段表用于描述接口或类中声明的变量，包括类级别（static）和实例级别变量，不包括在方法内部声明的变量
++++ 简单来说，字段表集合存储字段的修饰符+名称
++++ <B>变量修饰符使用标志位表示，字段数据类型和字段名称则引用常量池中常量表示。
+++ 方法表集合
++++ 访问标志
++++ 名称索引
++++ 描述符索引
++++ 属性表集合
*****: Java代码经过编译器编译为字节码之后，
存储在方法属性表集合中一个名叫"Code"的属性中;
+++ 属性表集合
++++ 在Class文件、字段表、方法表都可以携带子集的属性表集合，以用于描述某些场景专有的信息。
@endmindmap